{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\nxf33012\\\\Documents\\\\React Curse\\\\pokedex-react-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport axios from \"axios\";\nexport var receiveResultsPokemon = function receiveResultsPokemon(data) {\n  return {\n    type: \"RECEIVE_RESULTS_POKEMON\",\n    payload: data\n  };\n};\nexport var receiveError = function receiveError(error) {\n  return {\n    type: \"RECEIVE_ERROR\",\n    payload: error\n  };\n};\nexport var fetchPokemonData = function fetchPokemonData(filter) {\n  var pokemon = [];\n\n  var Pokemon = function Pokemon(name, type, health, specialAttack, img, url) {\n    _classCallCheck(this, Pokemon);\n\n    this.name = name;\n    this.type = type;\n    this.health = health;\n    this.specialAttack = specialAttack;\n    this.img = img;\n    this.url = url;\n  };\n\n  return function (dispatch) {\n    var url = \"https://pokeapi.co/api/v2/pokemon/?limit=964\";\n    return axios({\n      url: url,\n      timeout: 100000\n    }).then(function (response) {\n      var results = response.data.results.map(function (currentValue, index, array) {\n        var url = currentValue.url;\n        return axios({\n          url: url,\n          timeout: 100000\n        }).then(function (dataPokemon) {\n          var pokemonDetail = dataPokemon.data;\n          pokemonDetail = new Pokemon(pokemonDetail.name, pokemonDetail.types[0].type.name, pokemonDetail.stats[5].base_stat, pokemonDetail.stats[2].base_stat, pokemonDetail.sprites.front_default, url);\n          pokemon.push(pokemonDetail); // console.log(pokemon)\n        });\n      });\n      dispatch(receiveResultsPokemon(pokemon));\n    }).catch(function (response) {\n      dispatch(receiveError(pokemon));\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\nxf33012\\Documents\\React Curse\\pokedex-react-redux\\src\\store\\actions\\pokemon.js"],"names":["axios","receiveResultsPokemon","data","type","payload","receiveError","error","fetchPokemonData","filter","pokemon","Pokemon","name","health","specialAttack","img","url","dispatch","timeout","then","response","results","map","currentValue","index","array","dataPokemon","pokemonDetail","types","stats","base_stat","sprites","front_default","push","catch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,IAAI,EAAI;AACzC,SAAO;AACLC,IAAAA,IAAI,EAAE,yBADD;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALI;AAOP,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AACjC,SAAO;AACLH,IAAAA,IAAI,EAAE,eADD;AAELC,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALI;AAOP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,MAAM,EAAI;AAExC,MAAIC,OAAO,GAAG,EAAd;;AAFwC,MAIlCC,OAJkC,GAKtC,iBAAYC,IAAZ,EAAkBR,IAAlB,EAAwBS,MAAxB,EAAgCC,aAAhC,EAA+CC,GAA/C,EAAoDC,GAApD,EAAwD;AAAA;;AACtD,SAAKJ,IAAL,GAAYA,IAAZ;AACA,SAAKR,IAAL,GAAYA,IAAZ;AACA,SAAKS,MAAL,GAAcA,MAAd;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKC,GAAL,GAAWA,GAAX;AACD,GAZqC;;AAexC,SAAO,UAASC,QAAT,EAAmB;AACxB,QAAID,GAAG,GACL,8CADF;AAEA,WAAOf,KAAK,CAAC;AAAEe,MAAAA,GAAG,EAAEA,GAAP;AAAYE,MAAAA,OAAO,EAAE;AAArB,KAAD,CAAL,CACJC,IADI,CACC,UAASC,QAAT,EAAmB;AACvB,UAAIC,OAAO,GAAGD,QAAQ,CAACjB,IAAT,CAAckB,OAAd,CAAsBC,GAAtB,CAA0B,UAACC,YAAD,EAAeC,KAAf,EAAsBC,KAAtB,EAAgC;AACpE,YAAIT,GAAG,GAAGO,YAAY,CAACP,GAAvB;AACA,eAAOf,KAAK,CAAC;AAAEe,UAAAA,GAAG,EAAEA,GAAP;AAAYE,UAAAA,OAAO,EAAE;AAArB,SAAD,CAAL,CACNC,IADM,CACD,UAASO,WAAT,EAAsB;AAC1B,cAAIC,aAAa,GAAGD,WAAW,CAACvB,IAAhC;AACAwB,UAAAA,aAAa,GAAG,IAAIhB,OAAJ,CAAYgB,aAAa,CAACf,IAA1B,EAA+Be,aAAa,CAACC,KAAd,CAAoB,CAApB,EAAuBxB,IAAvB,CAA4BQ,IAA3D,EAAgEe,aAAa,CAACE,KAAd,CAAoB,CAApB,EAAuBC,SAAvF,EAAiGH,aAAa,CAACE,KAAd,CAAoB,CAApB,EAAuBC,SAAxH,EAAmIH,aAAa,CAACI,OAAd,CAAsBC,aAAzJ,EAAwKhB,GAAxK,CAAhB;AACAN,UAAAA,OAAO,CAACuB,IAAR,CAAaN,aAAb,EAH0B,CAI1B;AACD,SANM,CAAP;AAOD,OATW,CAAd;AAUAV,MAAAA,QAAQ,CAACf,qBAAqB,CAACQ,OAAD,CAAtB,CAAR;AACD,KAbI,EAcJwB,KAdI,CAcE,UAASd,QAAT,EAAmB;AACxBH,MAAAA,QAAQ,CAACX,YAAY,CAACI,OAAD,CAAb,CAAR;AACD,KAhBI,CAAP;AAiBD,GApBD;AAqBD,CApCM","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const receiveResultsPokemon = data => {\r\n    return {\r\n      type: \"RECEIVE_RESULTS_POKEMON\",\r\n      payload: data\r\n    };\r\n  };\r\n\r\nexport const receiveError = error => {\r\n    return {\r\n      type: \"RECEIVE_ERROR\",\r\n      payload: error\r\n    };\r\n  };\r\n\r\nexport const fetchPokemonData = filter => {\r\n\r\n  let pokemon = []; \r\n\r\n  class Pokemon {\r\n    constructor(name, type, health, specialAttack, img, url){\r\n      this.name = name; \r\n      this.type = type; \r\n      this.health = health; \r\n      this.specialAttack = specialAttack; \r\n      this.img = img; \r\n      this.url = url; \r\n    }\r\n  }\r\n\r\n  return function(dispatch) {\r\n    let url =\r\n      \"https://pokeapi.co/api/v2/pokemon/?limit=964\";\r\n    return axios({ url: url, timeout: 100000 })\r\n      .then(function(response) {\r\n        let results = response.data.results.map((currentValue, index, array) => {\r\n            let url = currentValue.url\r\n            return axios({ url: url, timeout: 100000})\r\n            .then(function(dataPokemon) {\r\n              var pokemonDetail = dataPokemon.data\r\n              pokemonDetail = new Pokemon(pokemonDetail.name,pokemonDetail.types[0].type.name,pokemonDetail.stats[5].base_stat,pokemonDetail.stats[2].base_stat, pokemonDetail.sprites.front_default, url)\r\n              pokemon.push(pokemonDetail)\r\n              // console.log(pokemon)\r\n            })\r\n          })\r\n        dispatch(receiveResultsPokemon(pokemon));\r\n      })\r\n      .catch(function(response) {\r\n        dispatch(receiveError(pokemon));\r\n      });\r\n  };\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}